# Determine what (Bourne compatible) shell we are running under. Put the result
# in $PROFILE_SHELL (not $SHELL) so further code can depend on the shell type.
# -------------------------------------------------------------
if test -n "$ZSH_VERSION"; then
  PROFILE_SHELL=zsh
elif test -n "$BASH_VERSION"; then
  PROFILE_SHELL=bash
elif test -n "$KSH_VERSION"; then
  PROFILE_SHELL=ksh
elif test -n "$FCEDIT"; then
  PROFILE_SHELL=ksh
elif test -n "$PS3"; then
  PROFILE_SHELL=unknown
else
  PROFILE_SHELL=sh
fi


# zsh doesn't support the -t flag of type, so it gets special support
# -------------------------------------------------------------
if [ "$PROFILE_SHELL" = "zsh" ]; then
	if [ "type gp >/dev/null" ]; then
		unalias gp
	fi

	if [ "type gclean >/dev/null" ]; then
		unalias gclean
	fi
else
	[[ $(type -t gp) == "alias" ]] && unalias gp
	[[ $(type -t gclean) == "alias" ]] && unalias gclean

	# These aliases are only fixed up on non-zsh to keep them
	# the same as the zsh versions
	[[ $(type -t l) == "alias" ]] && unalias l
	[[ $(type -t la) == "alias" ]] && unalias la
	[[ $(type -t ll) == "alias" ]] && unalias ll

	alias l="ls -lah"
	alias la="ls -lAh"
	alias ll="ls -lh"
fi


# Aliases
# -------------------------------------------------------------
alias gd="git difftool --dir-diff --no-symlinks"
alias gf="git fetch"
alias gsu="git submodule update --init --recursive"


# Functions
# -------------------------------------------------------------
gs() {
	git status
}

gp() {
	echo "Pulling git + Updating submodules..."
    git pull && gsu && gs
}

gfp() {
	echo "Fetching and pruning..."
	git fetch --prune --progress
	git prune --progress
    gp
}

gclean() {
	echo "Cleaning git..."
	git clean -ffdx
}

gnuke() {
	echo "Nuking this folder..."
	gclean
	git fetch --prune --progress
	git prune --progress
	echo "Taking out the trash..."
	git gc
}

gnukep() {
	gnuke && gfp
}

gcop() {
	(git fetch || git fetch) && git checkout $1 && gp
}

gdh() {
	git status
	gd HEAD
}

gbisect() {
	git bisect $1
	gsu
}

ggc() {
	git fetch --prune
	git gc
}


# Cmake Configure and build
# -------------------------------------------------------------
cconf() {
  cmake --preset=$1
}

cclean() {
  cmake --build build/ --target clean
}

cbuild() {
  cmake --build build/ --config=$1 --parallel 20
}

cbuildall() {
  cbuild Release && cbuild Debug
}

crebuild() {
  cconf $1 && cclean && cbuild $2
}


# Shortcut. Feel free to change this per environment
crb() {
  crebuild linux-only-debug Debug
}

ctests() {
  ctest --preset=default
}

alias ct=ctests
alias doit="crb && ct"

# Nala
# -------------------------------------------------------------
alias nlu="sudo nala update && sudo nala list --upgradable"
alias nup="sudo nala upgrade -y"


# Tmux
# -------------------------------------------------------------
alias mux="tmuxinator"


# Include work-specific aliases
# -------------------------------------------------------------
if [ -f ~/.aliases_work ]; then
	. ~/.aliases_work
fi

